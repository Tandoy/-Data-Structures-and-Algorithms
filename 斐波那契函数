package com.tz;

public class Main {
    /*
     * 求第N个斐波那契数
     * 泰波那契序列 Tn 定义如下： 
       T0 = 0, T1 = 1, T2 = 1, 且在 n >= 0 的条件下 Tn+3 = Tn + Tn+1 + Tn+2
	        给你整数 n，请返回第 n 个泰波那契数 Tn 的值。
	 0 1 1 2 3 5 8
	 0 1 2 3 4 5 6
	 输入：n = 4
	 输出：4
	 解释：
	 T_3 = 0 + 1 + 1 = 2
	 T_4 = 1 + 1 + 2 = 4
     * */
	public static int fib1(int n) {
		// 时间复杂度：O(2^n)
		if(n <= 1) return n;
		return fib1(n - 1) + fib1(n - 2);
	}
	public static int fib2(int n) {
		// 时间复杂度：O(n)
		if(n <= 1) return n;
		int frist = 0;
		int second = 1;
		for (int i = 0; i < n -1 ; i++) {
			int sum = frist + second;
			frist = second;
			second = sum;
		}
		return second;
	}
	public static void main(String[] args) {
		   System.out.println(fib2(4));
 	}
}
